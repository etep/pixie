# Copyright 2018- The Pixie Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

import px

df = px.DataFrame('http_events', start_time='-10s')
df.cmdline = px.upid_to_cmdline(df.upid)
df.hostname = px._exec_hostname()

df = df.head(15000)
df.req_start_time = df.time_ - df.latency
df.host = px.pluck(df.req_headers, 'Host')
df.req_url = df.host + df.req_path

df.user_agent = px.pluck(df.req_headers, 'User-Agent')
df.trace_id = px.pluck(df.req_headers, 'X-B3-TraceId')
df.span_id = px.pluck(df.req_headers, 'X-B3-SpanId')
df.parent_span_id = px.pluck(df.req_headers, 'X-B3-ParentSpanId')

# Strip out all but the actual path value from req_path
df.req_path = px.uri_recompose('', '', '', 0, px.pluck(px.uri_parse(df.req_path), 'path'), '', '')

# Replace any Hex IDS from the path with <id>
# flake8: noqa:W605
df.req_path = px.replace('/[a-fA-F0-9\-:]{6,}(/?)', df.req_path, '/<id>\\1')


df.pixie = 'standalone_pixie'
df.upidStr = px.upid_to_string(df.upid)

px.export(
    df, px.otel.Data(
        endpoint=px.otel.Endpoint(
            url='otlp.nr-data.net:443',
            headers={
                'api-key': '',
            }
        ),
        resource={
            'service.name': df.upidStr,
            'instrumentation.provider': df.pixie,
        },
        data=[
            px.otel.trace.Span(
                name=df.req_path,
                start_time=df.req_start_time,
                end_time=df.time_,
                trace_id=df.trace_id,
                span_id=df.span_id,
                parent_span_id=df.parent_span_id,
                kind=px.otel.trace.SPAN_KIND_SERVER,
                attributes={
                    # NOTE: the integration handles splitting of services.
                    'hostname': df.hostname,
                    'cmdline': df.cmdline,
                    'http.req_body': df.req_body,
                    'http.resp_body': df.resp_body,
                    'http.method': df.req_method,
                    'http.url': df.req_url,
                    'http.target': df.req_path,
                    'http.host': df.host,
                    'http.status_code': df.resp_status,
                    'http.user_agent': df.user_agent,
                },
            ),
        ],
    ),
)
