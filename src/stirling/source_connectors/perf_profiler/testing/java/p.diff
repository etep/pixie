diff --git a/src/stirling/source_connectors/perf_profiler/testing/java/ProfilerTest.java b/src/stirling/source_connectors/perf_profiler/testing/java/ProfilerTest.java
index 7e533d895..d942b868d 100644
--- a/src/stirling/source_connectors/perf_profiler/testing/java/ProfilerTest.java
+++ b/src/stirling/source_connectors/perf_profiler/testing/java/ProfilerTest.java
@@ -41,4 +41,6 @@ class ProfilerTest {
-        // We do some silly things here to prevent newer more powerful JVMs from inlining.
-        if( j % m == 0 ) {
-          s += j;
-        }
+        s += j;
+
+        // This tests if a prime number (stored in k) is divisible by the loop variable "j".
+        // Of course not! But hopefully the JIT compiler won't notice this.
+        // If we remove this (effectively) dead code, then certain JVMs (e.g. azul-zulu-debian)
+        // seem to be able to statically analyze this code and directly return the value for s.
@@ -68,4 +70,6 @@ class ProfilerTest {
-        // We do some silly things here to prevent newer more powerful JVMs from inlining.
-        if( j % m == 0 ) {
-          s += j;
-        }
+        s += j;
+
+        // This tests if a prime number (stored in k) is divisible by the loop variable "j".
+        // Of course not! But hopefully the JIT compiler won't notice this.
+        // If we remove this (effectively) dead code, then certain JVMs (e.g. azul-zulu-debian)
+        // seem to be able to statically analyze this code and directly return the value for s.
@@ -83,2 +87,2 @@ class ProfilerTest {
-    long ntrials = 500000000;
-    long update_interval = ntrials / 100000;
+    long ntrials = 500;
+    long update_interval = 10;
@@ -99,0 +104 @@ class ProfilerTest {
+      break;
